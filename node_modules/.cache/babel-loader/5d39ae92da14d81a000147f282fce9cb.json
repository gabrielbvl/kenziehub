{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/Kenzie/M3/Entregas/react-entrega-s2-kenzie-hub-gabrielbvlk/src/Components/FormLogin/index.jsx\",\n    _s = $RefreshSig$();\n\nimport style from \"./styles.js\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport ApiKenzieHub from \"../../Services\";\nimport { Image, Box, Button, Container, FormControl, TextField, Typography } from \"@mui/material\";\nimport { toast } from \"react-toastify\";\nimport React from \"react\";\nimport Logo from \"../../Images/Logo.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FormLogin() {\n  _s();\n\n  var _errors$email, _errors$email2, _errors$password, _errors$password2;\n\n  const formSchema = yup.object().shape({\n    email: yup.string().required(\"Digite seu email\"),\n    password: yup.string().required(\"Digite sua senha\")\n  });\n  const {\n    reset,\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(formSchema)\n  });\n\n  const onSubmitFunction = async dataForm => {\n    await ApiKenzieHub.post(\"/sessions/\", dataForm).then(res => {\n      toast.success(\"Authentication performed successfully!\");\n      reset();\n    }).catch(error => {\n      toast.error(\"Authentication Failed, incorrect login or password!\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: style.container,\n    children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: style.form,\n      component: \"form\",\n      onSubmit: handleSubmit(onSubmitFunction),\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        sx: style.login,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          color: \"white\"\n        },\n        children: \"E-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: style.box,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          sx: style.input,\n          error: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message,\n          helperText: (_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.message,\n          ...register(\"email\"),\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          sx: style.input,\n          error: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message,\n          helperText: (_errors$password2 = errors.password) === null || _errors$password2 === void 0 ? void 0 : _errors$password2.message,\n          type: \"password\",\n          ...register(\"password\"),\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          sx: style.buttonLogin,\n          type: \"submit\",\n          variant: \"contained\",\n          children: \"Entrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          color: \"white\",\n          color: \"#868E96\",\n          fontSize: \"12px\"\n        },\n        variant: \"p\",\n        children: \"Ainda n\\xE3o possui uma conta?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        sx: style.buttonGoRegister,\n        type: \"submit\",\n        variant: \"contained\",\n        children: \"Cadastre-se\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FormLogin, \"VbRAsLuieEUjNx1JBNLcIpcSyIM=\", false, function () {\n  return [useForm];\n});\n\n_c = FormLogin;\nexport default FormLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormLogin\");","map":{"version":3,"sources":["/home/gabriel/Kenzie/M3/Entregas/react-entrega-s2-kenzie-hub-gabrielbvlk/src/Components/FormLogin/index.jsx"],"names":["style","yup","useForm","yupResolver","ApiKenzieHub","Image","Box","Button","Container","FormControl","TextField","Typography","toast","React","Logo","FormLogin","formSchema","object","shape","email","string","required","password","reset","register","handleSubmit","formState","errors","resolver","onSubmitFunction","dataForm","post","then","res","success","catch","error","container","form","login","color","box","input","message","buttonLogin","fontSize","buttonGoRegister"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,MAArB,EAA6BC,SAA7B,EAAwCC,WAAxC,EAAqDC,SAArD,EAAgEC,UAAhE,QAAkF,eAAlF;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AAAA;;AACjB,QAAMC,UAAU,GAAGf,GAAG,CAACgB,MAAJ,GAAaC,KAAb,CAAmB;AAClCC,IAAAA,KAAK,EAAElB,GAAG,CAACmB,MAAJ,GAAaC,QAAb,CAAsB,kBAAtB,CAD2B;AAElCC,IAAAA,QAAQ,EAAErB,GAAG,CAACmB,MAAJ,GAAaC,QAAb,CAAsB,kBAAtB;AAFwB,GAAnB,CAAnB;AAKA,QAAM;AACFE,IAAAA,KADE;AAEFC,IAAAA,QAFE;AAGFC,IAAAA,YAHE;AAIFC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAJT,MAKFzB,OAAO,CAAC;AACR0B,IAAAA,QAAQ,EAAEzB,WAAW,CAACa,UAAD;AADb,GAAD,CALX;;AASA,QAAMa,gBAAgB,GAAG,MAAOC,QAAP,IAAoB;AACzC,UAAM1B,YAAY,CAAC2B,IAAb,CAAkB,YAAlB,EAAgCD,QAAhC,EACDE,IADC,CACKC,GAAD,IAAS;AACXrB,MAAAA,KAAK,CAACsB,OAAN,CAAc,wCAAd;AACAX,MAAAA,KAAK;AACR,KAJC,EAKDY,KALC,CAKMC,KAAD,IAAW;AACdxB,MAAAA,KAAK,CAACwB,KAAN,CAAY,qDAAZ;AACH,KAPC,CAAN;AAQH,GATD;;AAWA,sBACI,QAAC,SAAD;AAAW,IAAA,EAAE,EAAEpC,KAAK,CAACqC,SAArB;AAAA,4BACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,WAAD;AAAa,MAAA,EAAE,EAAErC,KAAK,CAACsC,IAAvB;AAA6B,MAAA,SAAS,EAAC,MAAvC;AAA8C,MAAA,QAAQ,EAAEb,YAAY,CAACI,gBAAD,CAApE;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,EAAE,EAAE7B,KAAK,CAACuC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI,QAAC,UAAD;AAAY,QAAA,EAAE,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,GAAD;AAAK,QAAA,EAAE,EAAExC,KAAK,CAACyC,GAAf;AAAA,gCACI,QAAC,SAAD;AACI,UAAA,EAAE,EAAEzC,KAAK,CAAC0C,KADd;AAEI,UAAA,KAAK,mBAAEf,MAAM,CAACR,KAAT,kDAAE,cAAcwB,OAFzB;AAGI,UAAA,UAAU,oBAAEhB,MAAM,CAACR,KAAT,mDAAE,eAAcwB,OAH9B;AAAA,aAIQnB,QAAQ,CAAC,OAAD,CAJhB;AAKI,UAAA,OAAO,EAAC;AALZ;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ,eAUI,QAAC,SAAD;AACI,UAAA,EAAE,EAAExB,KAAK,CAAC0C,KADd;AAEI,UAAA,KAAK,sBAAEf,MAAM,CAACL,QAAT,qDAAE,iBAAiBqB,OAF5B;AAGI,UAAA,UAAU,uBAAEhB,MAAM,CAACL,QAAT,sDAAE,kBAAiBqB,OAHjC;AAII,UAAA,IAAI,EAAC,UAJT;AAAA,aAKQnB,QAAQ,CAAC,UAAD,CALhB;AAMI,UAAA,OAAO,EAAC;AANZ;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAuBI,QAAC,GAAD;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,EAAE,EAAExB,KAAK,CAAC4C,WAAlB;AAA+B,UAAA,IAAI,EAAC,QAApC;AAA6C,UAAA,OAAO,EAAC,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAvBJ,eA4BI,QAAC,UAAD;AAAY,QAAA,EAAE,EAAE;AAAEJ,UAAAA,KAAK,EAAE,OAAT;AAAkBA,UAAAA,KAAK,EAAE,SAAzB;AAAoCK,UAAAA,QAAQ,EAAE;AAA9C,SAAhB;AAAwE,QAAA,OAAO,EAAC,GAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BJ,eA+BI,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAE7C,KAAK,CAAC8C,gBAAlB;AAAoC,QAAA,IAAI,EAAC,QAAzC;AAAkD,QAAA,OAAO,EAAC,WAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwCH;;GAlEQ/B,S;UAWDb,O;;;KAXCa,S;AAoET,eAAeA,SAAf","sourcesContent":["import style from \"./styles.js\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport ApiKenzieHub from \"../../Services\";\nimport { Image, Box, Button, Container, FormControl, TextField, Typography } from \"@mui/material\";\nimport { toast } from \"react-toastify\";\nimport React from \"react\";\nimport Logo from \"../../Images/Logo.svg\";\n\nfunction FormLogin() {\n    const formSchema = yup.object().shape({\n        email: yup.string().required(\"Digite seu email\"),\n        password: yup.string().required(\"Digite sua senha\"),\n    });\n\n    const {\n        reset,\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm({\n        resolver: yupResolver(formSchema),\n    });\n\n    const onSubmitFunction = async (dataForm) => {\n        await ApiKenzieHub.post(\"/sessions/\", dataForm)\n            .then((res) => {\n                toast.success(\"Authentication performed successfully!\");\n                reset();\n            })\n            .catch((error) => {\n                toast.error(\"Authentication Failed, incorrect login or password!\");\n            });\n    };\n\n    return (\n        <Container sx={style.container}>\n            <Logo />\n            <FormControl sx={style.form} component=\"form\" onSubmit={handleSubmit(onSubmitFunction)}>\n                <Typography sx={style.login}>Login</Typography>\n\n                <Typography sx={{ color: \"white\" }}>E-mail</Typography>\n                <Box sx={style.box}>\n                    <TextField\n                        sx={style.input}\n                        error={errors.email?.message}\n                        helperText={errors.email?.message}\n                        {...register(\"email\")}\n                        variant=\"outlined\"\n                    />\n\n                    <Typography>Senha</Typography>\n                    <TextField\n                        sx={style.input}\n                        error={errors.password?.message}\n                        helperText={errors.password?.message}\n                        type=\"password\"\n                        {...register(\"password\")}\n                        variant=\"outlined\"\n                    />\n                </Box>\n                <Box>\n                    <Button sx={style.buttonLogin} type=\"submit\" variant=\"contained\">\n                        Entrar\n                    </Button>\n                </Box>\n                <Typography sx={{ color: \"white\", color: \"#868E96\", fontSize: \"12px\" }} variant=\"p\">\n                    Ainda não possui uma conta?\n                </Typography>\n                <Button sx={style.buttonGoRegister} type=\"submit\" variant=\"contained\">\n                    Cadastre-se\n                </Button>\n            </FormControl>\n        </Container>\n    );\n}\n\nexport default FormLogin;\n"]},"metadata":{},"sourceType":"module"}