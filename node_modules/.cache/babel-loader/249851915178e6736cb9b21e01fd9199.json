{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/Kenzie/M3/Entregas/react-entrega-s2-kenzie-hub-gabrielbvlk/src/Components/FormLogin/index.jsx\",\n    _s = $RefreshSig$();\n\nimport style from \"./styles.js\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport ApiKenzieHub from \"../../Services\";\nimport { Avatar, Box, Button, Container, FormControl, TextField, Typography } from \"@mui/material\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FormLogin() {\n  _s();\n\n  var _errors$username, _errors$username2, _errors$password, _errors$password2;\n\n  const formSchema = yup.object().shape({\n    email: yup.string().required(\"Digite seu email\"),\n    password: yup.string().required(\"Digite sua senha\")\n  });\n  const {\n    reset,\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(formSchema)\n  });\n\n  const onSubmitFunction = async dataForm => {\n    await ApiKenzieHub.post(\"/sessions/\", dataForm).then(res => {\n      toast.success(\"Authentication performed successfully!\");\n      reset();\n    }).catch(error => {\n      toast.error(\"Authentication Failed, incorrect login or password!\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: style.container,\n    children: [/*#__PURE__*/_jsxDEV(Avatar, {\n      sx: {\n        width: \"80px\",\n        height: \"80px\",\n        marginRight: \"20px\"\n      },\n      alt: \"Icon User\",\n      src: \"./Logo.svg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: style.form,\n      component: \"form\",\n      onSubmit: handleSubmit(onSubmitFunction),\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: style.box,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          sx: style.input,\n          error: (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message,\n          ...register(\"email\"),\n          label: \"UserName\",\n          variant: \"filled\",\n          helperText: (_errors$username2 = errors.username) === null || _errors$username2 === void 0 ? void 0 : _errors$username2.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          sx: style.input,\n          error: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message,\n          helperText: (_errors$password2 = errors.password) === null || _errors$password2 === void 0 ? void 0 : _errors$password2.message,\n          type: \"password\",\n          ...register(\"password\"),\n          label: \"PassWord\",\n          variant: \"filled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"success\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FormLogin, \"VbRAsLuieEUjNx1JBNLcIpcSyIM=\", false, function () {\n  return [useForm];\n});\n\n_c = FormLogin;\nexport default FormLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormLogin\");","map":{"version":3,"sources":["/home/gabriel/Kenzie/M3/Entregas/react-entrega-s2-kenzie-hub-gabrielbvlk/src/Components/FormLogin/index.jsx"],"names":["style","yup","useForm","yupResolver","ApiKenzieHub","Avatar","Box","Button","Container","FormControl","TextField","Typography","toast","FormLogin","formSchema","object","shape","email","string","required","password","reset","register","handleSubmit","formState","errors","resolver","onSubmitFunction","dataForm","post","then","res","success","catch","error","container","width","height","marginRight","form","box","input","username","message"],"mappings":"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","sourcesContent":["import style from \"./styles.js\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport ApiKenzieHub from \"../../Services\";\nimport { Avatar, Box, Button, Container, FormControl, TextField, Typography } from \"@mui/material\";\nimport { toast } from \"react-toastify\";\n\nfunction FormLogin() {\n    const formSchema = yup.object().shape({\n        email: yup.string().required(\"Digite seu email\"),\n        password: yup.string().required(\"Digite sua senha\"),\n    });\n\n    const {\n        reset,\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm({\n        resolver: yupResolver(formSchema),\n    });\n\n    const onSubmitFunction = async (dataForm) => {\n        await ApiKenzieHub.post(\"/sessions/\", dataForm)\n            .then((res) => {\n                toast.success(\"Authentication performed successfully!\");\n                reset();\n            })\n            .catch((error) => {\n                toast.error(\"Authentication Failed, incorrect login or password!\");\n            });\n    };\n\n    return (\n        <Container sx={style.container}>\n            <Avatar\n                sx={{ width: \"80px\", height: \"80px\", marginRight: \"20px\" }}\n                alt=\"Icon User\"\n                src={\"./Logo.svg\"}\n            />\n            <FormControl sx={style.form} component=\"form\" onSubmit={handleSubmit(onSubmitFunction)}>\n                <Typography variant=\"h3\">Login</Typography>\n\n                <Box sx={style.box}>\n                    <TextField\n                        autoFocus={true}\n                        sx={style.input}\n                        error={errors.username?.message}\n                        {...register(\"email\")}\n                        label=\"UserName\"\n                        variant=\"filled\"\n                        helperText={errors.username?.message}\n                    />\n\n                    <TextField\n                        sx={style.input}\n                        error={errors.password?.message}\n                        helperText={errors.password?.message}\n                        type=\"password\"\n                        {...register(\"password\")}\n                        label=\"PassWord\"\n                        variant=\"filled\"\n                    />\n                </Box>\n                <Box>\n                    <Button type=\"submit\" variant=\"contained\" color=\"success\">\n                        Login\n                    </Button>\n                </Box>\n            </FormControl>\n        </Container>\n    );\n}\n\nexport default FormLogin;\n"]},"metadata":{},"sourceType":"module"}