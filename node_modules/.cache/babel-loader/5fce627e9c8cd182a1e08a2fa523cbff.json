{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/Kenzie/M3/Entregas/react-entrega-s2-kenzie-hub-gabrielbvlk/src/Components/FormRegister/index.jsx\",\n    _s = $RefreshSig$();\n\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport ApiKenzieHub from \"../../Services\";\nimport { toast } from \"react-toastify\";\nimport React from \"react\";\nimport Logo from \"../../Images/Logo.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FormRegister() {\n  _s();\n\n  var _errors$email, _errors$password;\n\n  const formSchema = yup.object().shape({\n    name: yup.string().required(\"Digite seu nome\"),\n    email: yup.string().required(\"Digite seu email\"),\n    password: yup.string().required(\"Digite sua senha\"),\n    passwordConfirmed: yup.string().oneOf([yup.ref(\"password\")], \"Senhas diferentes\").required(\"Confirme sua senha\")\n  });\n  const {\n    reset,\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(formSchema)\n  });\n\n  const onSubmitFunction = async dataForm => {\n    await ApiKenzieHub.post(\"/users\", dataForm).then(res => {\n      toast.success(\"Conta criada com sucesso\");\n      reset();\n    }).catch(error => {\n      toast.error(\"Ops! Algo deu errado\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmitFunction),\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Crie sua conta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"R\\xE1pido egr\\xE1tis, vamos nessa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"E-mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          error: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message,\n          ...register(\"email\"),\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.email && errors.email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          error: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message,\n          type: \"password\",\n          ...register(\"password\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.password && errors.password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          variant: \"contained\",\n          children: \"Entrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Ainda n\\xE3o possui uma conta?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        variant: \"contained\",\n        children: \"Cadastre-se\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FormRegister, \"VbRAsLuieEUjNx1JBNLcIpcSyIM=\", false, function () {\n  return [useForm];\n});\n\n_c = FormRegister;\nexport default FormRegister;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormRegister\");","map":{"version":3,"sources":["/home/gabriel/Kenzie/M3/Entregas/react-entrega-s2-kenzie-hub-gabrielbvlk/src/Components/FormRegister/index.jsx"],"names":["yup","useForm","yupResolver","ApiKenzieHub","toast","React","Logo","FormRegister","formSchema","object","shape","name","string","required","email","password","passwordConfirmed","oneOf","ref","reset","register","handleSubmit","formState","errors","resolver","onSubmitFunction","dataForm","post","then","res","success","catch","error","message"],"mappings":"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","sourcesContent":["import * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport ApiKenzieHub from \"../../Services\";\nimport { toast } from \"react-toastify\";\nimport React from \"react\";\nimport Logo from \"../../Images/Logo.svg\";\n\nfunction FormRegister() {\n    const formSchema = yup.object().shape({\n        name: yup.string().required(\"Digite seu nome\"),\n        email: yup.string().required(\"Digite seu email\"),\n        password: yup.string().required(\"Digite sua senha\"),\n        passwordConfirmed: yup\n            .string()\n            .oneOf([yup.ref(\"password\")], \"Senhas diferentes\")\n            .required(\"Confirme sua senha\"),\n    });\n\n    const {\n        reset,\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm({\n        resolver: yupResolver(formSchema),\n    });\n\n    const onSubmitFunction = async (dataForm) => {\n        await ApiKenzieHub.post(\"/users\", dataForm)\n            .then((res) => {\n                toast.success(\"Conta criada com sucesso\");\n                reset();\n            })\n            .catch((error) => {\n                toast.error(\"Ops! Algo deu errado\");\n            });\n    };\n\n    return (\n        <section>\n            <form onSubmit={handleSubmit(onSubmitFunction)}>\n                <h4>Crie sua conta</h4>\n                <p>Rápido egrátis, vamos nessa</p>\n\n                <div>\n                    <p>E-mail</p>\n                    <input\n                        error={errors.email?.message}\n                        {...register(\"email\")}\n                        variant=\"outlined\"\n                    />\n                    <p>{errors.email && errors.email.message}</p>\n\n                    <p>Senha</p>\n                    <input\n                        error={errors.password?.message}\n                        type=\"password\"\n                        {...register(\"password\")}\n                    />\n                    <p>{errors.password && errors.password.message}</p>\n                </div>\n\n                <div>\n                    <button type=\"submit\" variant=\"contained\">\n                        Entrar\n                    </button>\n                </div>\n\n                <p>Ainda não possui uma conta?</p>\n\n                <button type=\"submit\" variant=\"contained\">\n                    Cadastre-se\n                </button>\n            </form>\n        </section>\n    );\n}\n\nexport default FormRegister;\n"]},"metadata":{},"sourceType":"module"}